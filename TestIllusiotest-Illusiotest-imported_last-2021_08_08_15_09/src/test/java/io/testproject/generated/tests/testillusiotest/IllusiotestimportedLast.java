package io.testproject.generated.tests.testillusiotest;

import io.testproject.addon.CombinedActions;
import io.testproject.addon.ElementExtensions;
import io.testproject.addon.jQuerySlider;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;

/**
 * This class was automatically generated by TestProject
 * Project: TestIllusiotest
 * Test: Illusiotest-imported last
 * Generated by: Test Automation (priyasam1227@gmail.com)
 * Generated on Sun Aug 08 15:09:07 GMT 2021.
 */
@DisplayName("Illusiotest-imported last")
public class IllusiotestimportedLast implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("iI2OmYLrMW2nD-CGH74BMbc8a6F7YexePEOd7x7x3xQ", new ChromeOptions(), "Test Automation");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("Illusiotest-imported last")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(25000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    jQuerySlider.MoveToPosition moveToPosition;
    CombinedActions.ClearAndTypeAction clearAndTypeAction;
    ElementExtensions.SwitchToFrame switchToFrame;

    // 1. Navigate to '{{ApplicationURL}}'
    //    Navigates the specified URL (Auto-generated)
    driver.navigate().to(ApplicationURL);
    GeneratedUtils.sleep(1528);

    // 2. Click 'Your Path'
    by = By.xpath("/html/body/app-root/div/div/app-journey/form/div/div[2]/div[1]/div/div/div[2]");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 3. Click 'SPAN'
    by = By.xpath("//section[2]/div/div/mat-radio-group/div[2]/div[1]/div[1]/label/span");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 4. Click 'DIV1'
    by = By.xpath("//section[2]/div/div");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 5. Click 'Next'
    by = By.xpath("//section[2]//button[. = 'Next']");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 6. Click '35 to 45'
    by = By.xpath("/html/body/app-root/div/div/app-journey/form/div/div[1]/div/section[3]/div/div[2]/div[2]/div[1]/div/mat-radio-group/div[2]/div/label/span");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 7. Click 'Next1'
    by = By.xpath("/html/body/app-root/div/div/app-journey/form/div/div[1]/div/section[3]/div/div[2]/div[3]/div/button");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 8. Click 'IMG'
    by = By.xpath("/html/body/div[14]/div[1]/div[1]/button[2]/img");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 9. Click 'CANVAS'
    by = By.xpath("//div[@id='AppCanvas']//canvas");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 10. Run Switch to iFrame
    /* Step is disabled
    switchToFrame = ElementExtensions.getSwitchToFrame();
    by = By.xpath("//div[@id='AppCanvas']//canvas");
    switchToFrame = (ElementExtensions.SwitchToFrame)((ReportingDriver)driver).addons().execute(switchToFrame, by, -1);
    GeneratedUtils.sleep(1528);
    */
    // 11. Click 'IMG1'
    by = By.xpath("/html/body/div[14]/div[2]/div[1]/button[3]/img");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 12. Click 'IMG2'
    by = By.xpath("/html/body/div[14]/div[1]/div[3]/button[2]/img");
    driver.findElement(by).click();
    GeneratedUtils.sleep(1528);

    // 13. Run Switch to iFrame
    //    Switching for second time
    switchToFrame = ElementExtensions.getSwitchToFrame();
    by = By.xpath("//div[@id='AppCanvas']//canvas");
    switchToFrame = (ElementExtensions.SwitchToFrame)((ReportingDriver)driver).addons().execute(switchToFrame, by, -1);
    GeneratedUtils.sleep(1528);

    // 14. Move slider to '-80'
    moveToPosition = jQuerySlider.moveToPosition(-80);
    by = By.cssSelector("#Size");
    moveToPosition = (jQuerySlider.MoveToPosition)((ReportingDriver)driver).addons().execute(moveToPosition, by, -1);
    GeneratedUtils.sleep(1528);

    // 15. Run Clear 'Size default' contents and type '-78'
    clearAndTypeAction = CombinedActions.clearAndTypeAction("-78");
    by = By.cssSelector("#Size");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);
    GeneratedUtils.sleep(1528);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://www.breastimplantsbymentor.com/MENTOR-journey/"));
  }
}
